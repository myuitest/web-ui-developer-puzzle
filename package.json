{
  "name": "tmo",
  "version": "0.0.0",
  "license": "MIT",
  "scripts": {
    "ng": "nx",
    "nx": "nx",
    "start": "nx serve okreads",
    "build": "nx build",
    "test": "nx test",
    "lint": "nx workspace-lint && nx lint",
    "e2e": "nx e2e okreads-e2e",
    "e2e:watch": "nx e2e okreads-e2e --watch",
    "affected:apps": "nx affected:apps",
    "affected:libs": "nx affected:libs",
    "affected:build": "nx affected:build",
    "affected:e2e": "nx affected:e2e",
    "affected:test": "nx affected:test",
    "affected:lint": "nx affected:lint",
    "affected:dep-graph": "nx affected:dep-graph",
    "affected": "nx affected",
    "format": "nx format:write",
    "format:write": "nx format:write",
    "format:check": "nx format:check",
    "update": "ng update @nrwl/workspace",
    "workspace-schematic": "nx workspace-schematic",
    "dep-graph": "nx dep-graph",
    "help": "nx help",
    "postinstall": "ngcc --properties es2015 browser module main --first-only --create-ivy-entry-points && node ./decorate-angular-cli.js"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^10.0.10",
    "@angular/cdk": "9.2.2",
    "@angular/common": "^10.0.10",
    "@angular/compiler": "^10.0.10",
    "@angular/core": "^10.0.10",
    "@angular/forms": "^10.0.10",
    "@angular/material": "9.2.2",
    "@angular/platform-browser": "^10.0.10",
    "@angular/platform-browser-dynamic": "^10.0.10",
    "@angular/router": "^10.0.10",
    "@nestjs/common": "^7.0.0",
    "@nestjs/core": "^7.0.0",
    "@nestjs/platform-express": "^7.0.0",
    "@ngrx/effects": "9.1.0",
    "@ngrx/entity": "9.1.0",
    "@ngrx/router-store": "9.1.0",
    "@ngrx/store": "9.1.0",
    "@nrwl/angular": "10.0.12",
    "core-js": "^2.5.4",
    "material-design-icons": "3.0.1",
    "node-localstorage": "2.1.6",
    "reflect-metadata": "^0.1.13",
    "rxjs": "~6.5.5",
    "zone.js": "^0.10.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.1000.6",
    "@angular/cli": "~10.0.0",
    "@angular/compiler-cli": "^10.0.10",
    "@angular/language-service": "^10.0.10",
    "@nestjs/schematics": "^7.0.0",
    "@nestjs/testing": "^7.0.0",
    "@ngrx/schematics": "9.1.0",
    "@ngrx/store-devtools": "9.1.0",
    "@nrwl/cypress": "10.0.12",
    "@nrwl/jest": "10.0.12",
    "@nrwl/nest": "10.0.12",
    "@nrwl/node": "10.0.12",
    "@nrwl/workspace": "10.0.12",
    "@types/jasmine": "^3.5.12",
    "@types/jest": "25.1.4",
    "@types/mocha": "^7.0.2",
    "@types/node": "~8.9.4",
    "@types/sinon": "^9.0.0",
    "@types/sinon-chai": "^3.2.4",
    "@types/sinon-test": "^2.4.1",
    "chai": "^4.2.0",
    "codelyzer": "^6.0.0",
    "cypress": "^6.0.1",
    "dotenv": "6.2.0",
    "eslint": "6.8.0",
    "jest": "25.2.3",
    "jest-preset-angular": "8.1.2",
    "mocha": "^7.1.2",
    "normalize.css": "8.0.1",
    "prettier": "2.0.5",
    "protractor": "~7.0.0",
    "sinon": "^9.0.2",
    "sinon-chai": "^3.5.0",
    "ts-jest": "25.4.0",
    "ts-node": "~7.0.0",
    "tslint": "~6.1.0",
    "typescript": "~3.9.7",
    "eslint-plugin-cypress": "^2.10.3",
    "@nrwl/eslint-plugin-nx": "10.0.12",
    "@typescript-eslint/parser": "2.19.2",
    "@typescript-eslint/eslint-plugin": "2.19.2",
    "eslint-config-prettier": "6.0.0"
  }
}
buildscript {

    repositories {
        maven {
            url "$mavenUrl"
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
    }
    dependencies {
        classpath 'org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:1.0.1'
        classpath 'com.adtran:scala-multiversion-plugin:1.0.36'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

subprojects {
    apply plugin: 'scala'
    apply plugin: 'java'
    apply plugin: 'scalaStyle'
    apply plugin: 'com.adtran.scala-multiversion-plugin'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group 'hsbc.emf'
    version '0.1'

    repositories {
        maven {
            url "$mavenUrl"
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
    }

    sourceSets {
        main.scala.srcDir 'src'
        main.resources.srcDir 'src/resources'
        test.scala.srcDir 'tests'
        test.resources.srcDir  'tests/resources'
    }

    scalaStyle {
        configLocation = "$rootDir/scalastyle-config.xml"
        includeTestSourceDirectory = true
        source = "src/hsbc/emf"
        testSource = "tests/hsbc/emf"
    }

    compileScala {
        scalaCompileOptions.additionalParameters = ["-target:jvm-1.8"]

        dependsOn scalaStyle
    }

    dependencies {
        implementation "org.scala-lang:scala-library:%scala-version%"
        implementation "org.scala-lang:scala-reflect:%scala-version%"
        implementation "org.apache.logging.log4j:log4j-api-scala_%%:11.0"
        implementation "org.apache.logging.log4j:log4j-api:2.14.0"
        implementation "org.apache.logging.log4j:log4j-core:2.14.0"
        implementation "joda-time:joda-time:2.10.5"
        implementation "com.lmax:disruptor:3.3.6"
        implementation "org.apache.spark:spark-avro_%%:$sparkVersion"
        implementation 'org.graalvm.js:js:21.0.0.2'
        implementation group: 'org.graalvm.js', name: 'js-scriptengine', version: '21.0.0.2'
        compileOnly "org.apache.spark:spark-sql_%%:$sparkVersion"
        compileOnly "org.apache.spark:spark-hive_%%:$sparkVersion"
        testImplementation "org.scalatest:scalatest_%%:3.0.8"
        testImplementation "org.scalamock:scalamock_%%:4.4.0"
        testImplementation "junit:junit:4.12"
        testImplementation "org.mockito:mockito-all:1.10.19"
    }

    shadowJar{
        def classname = project.gradle.startParameter.projectProperties.get("classname")
        if (classname == null) {
            classname = ""
        }

        manifest {
            attributes("Implementation-Title": "SparkEmf",
                    "Main-Class": classname,
                    "Implementation-Version": version)
        }
    }

    configurations {
        testImplementation.extendsFrom compileOnly
    }


    task scalaTest(dependsOn: ['testClasses'], type: JavaExec) {
        main = 'org.scalatest.tools.Runner'
        args = ['-R', 'build/classes/scala/test', '-o',
                '-u', "${project.rootDir}/build/reports/xml/allTests"]
        classpath = sourceSets.test.runtimeClasspath
    }
    test.dependsOn scalaTest
}

rootProject.name = 'emf-scala'

include ':application'


scalaVersions = 2.12.10, 2.11.12
sparkVersion = 2.4.5
